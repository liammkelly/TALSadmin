{"version":3,"sources":["actionTypes/index.js","actions/index.js","components/ClassForm.js","components/ClassList.js","components/ScheduleForm.js","App.js","reducers/index.js","middleware/api.js","actions/api.js","stores/index.js","index.js"],"names":["ADD_CLASS_SUCCESS","ADD_CLASS_FAILURE","DELETE_EVENT_SUCCESS","DELETE_EVENT_FAILURE","SCHEDULE_EVENT_SUCCESS","SCHEDULE_EVENT_FAILURE","LOAD_CLASSES_SUCCESS","LOAD_CLASSES_START","LOAD_CLASSES_FAILURE","LOAD_EVENTS_SUCCESS","LOAD_EVENTS_START","LOAD_EVENTS_FAILURE","API","loadClasses","apiAction","url","onSuccess","loadClassesSuccess","onFailure","loadClassesFailure","label","scheduleEvent","payload","data","method","scheduleEventFailure","accessToken","headersOverride","type","classes","error","loadEventsSuccess","classEvents","loadEventsFailure","deleteEventFailure","deleteEventSuccess","addNewClassFailure","mapDispatchToProps","addNewClass","title","ClassForm","connect","props","useState","setTitle","className","onSubmit","event","preventDefault","htmlFor","id","value","onChange","target","library","add","fab","faTrash","deleteClassEvent","loadEvents","ClassList","state","useEffect","confirmDelete","selectedId","dataset","confirmAlert","message","buttons","onClick","closeOnClickOutside","map","el","start","href","key","class_event_id","data-id","ConnectedForm","class_id","event_date","handleChange","bind","handleDatetimeChange","handleSubmit","this","setState","duration","moment","toDate","datetime","format","cls","name","Component","Form","dispatch","App","class","to","path","component","ScheduleForm","style","width","textAlign","reducer","action","console","info","Object","assign","apiMiddleware","next","headers","dataOrParams","includes","axios","defaults","baseURL","process","REACT_APP_BASE_URL","common","apiStart","request","then","catch","apiError","response","status","accessDenied","window","location","pathname","finally","apiEnd","store","createStore","rootReducer","applyMiddleware","ReactDOM","render","basename","document","getElementById"],"mappings":"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","file":"static/js/main.5719b942.chunk.js","sourcesContent":["export const ADD_CLASS_START = \"ADD_CLASS_START\"\nexport const ADD_CLASS_SUCCESS = \"ADD_CLASS_SUCCESS\"\nexport const ADD_CLASS_FAILURE = \"ADD_CLASS_FAILURE\"\nexport const DELETE_EVENT_SUCCESS = \"DELETE_EVENT_SUCCESS\"\nexport const DELETE_EVENT_START = \"DELETE_EVENT_START\"\nexport const DELETE_EVENT_FAILURE = \"DELETE_EVENT_FAILURE\"\nexport const LOAD_CLASSES = \"LOAD_CLASSES\"\nexport const LOAD_EVENTS = \"LOAD_EVENTS\"\nexport const SCHEDULE_EVENT = \"SCHEDULE_EVENT\"\nexport const SCHEDULE_EVENT_START = \"SCHEDULE_EVENT_START\"\nexport const SCHEDULE_EVENT_SUCCESS = \"SCHEDULE_EVENT_SUCCESS\"\nexport const SCHEDULE_EVENT_FAILURE = \"SCHEDULE_EVENT_FAILURE\"\nexport const LOAD_CLASSES_SUCCESS = \"LOAD_CLASSES_SUCCESS\"\nexport const LOAD_CLASSES_START = \"LOAD_CLASSES_START\"\nexport const LOAD_CLASSES_FAILURE = \"LOAD_CLASSES_FAILURE\"\nexport const LOAD_EVENTS_SUCCESS = \"LOAD_EVENTS_SUCCESS\"\nexport const LOAD_EVENTS_START = \"LOAD_EVENTS_START\"\nexport const LOAD_EVENTS_FAILURE = \"LOAD_EVENTS_FAILURE\"\n\n// middleware actions\nexport const API = \"API\"\nexport const API_START = \"API_START\"\nexport const API_END = \"API_END\"\nexport const ACCESS_DENIED = \"ACCESS_DENIED\"\nexport const API_ERROR = \"API_ERROR\"\n","import {\n  API,\n  DELETE_EVENT_START,\n  DELETE_EVENT_FAILURE,\n  LOAD_CLASSES_SUCCESS,\n  LOAD_CLASSES_START,\n  LOAD_CLASSES_FAILURE,\n  LOAD_EVENTS_SUCCESS,\n  LOAD_EVENTS_START,\n  LOAD_EVENTS_FAILURE,\n  ADD_CLASS_START,\n  ADD_CLASS_FAILURE,\n  ADD_CLASS_SUCCESS,\n  SCHEDULE_EVENT_START,\n  SCHEDULE_EVENT_FAILURE,\n  SCHEDULE_EVENT_SUCCESS,\n  DELETE_EVENT_SUCCESS\n} from \"../actionTypes\"\n\nexport const addNewClass = title => {\n  return apiAction({\n    url: '/admin/class/add',\n    data: title,\n    method: 'POST',\n    onSuccess: () => {\n      loadClasses()\n      addNewClassSuccess()\n    },\n    onFailure: addNewClassFailure,\n    label: ADD_CLASS_START\n  })\n}\n\nexport const deleteClassEvent = id => {\n  return apiAction({\n    url: `/event/delete/${id}`,\n    method: 'POST',\n    onSuccess: deleteEventSuccess,\n    onFailure: deleteEventFailure,\n    label: DELETE_EVENT_START\n  });\n}\n\nexport function loadClasses() {\n  return apiAction({\n    url: \"/classes/all\",\n    onSuccess: loadClassesSuccess,\n    onFailure: loadClassesFailure,\n    label: LOAD_CLASSES_START\n  });\n}\n\nexport function loadEvents() {\n  return apiAction({\n    url: \"/class/events/all\",\n    onSuccess: loadEventsSuccess,\n    onFailure: loadEventsFailure,\n    label: LOAD_EVENTS_START\n  });\n}\n\nexport const scheduleEvent = payload => {\n  return apiAction({\n    url: '/admin/event/add',\n    data: payload,\n    method: 'POST',\n    onSuccess: () => {\n      loadClasses()\n      scheduleEventSuccess()\n    },\n    onFailure: scheduleEventFailure,\n    label: SCHEDULE_EVENT_START\n  })\n}\n\nfunction apiAction({\n  url = \"\",\n  method = \"GET\",\n  data = null,\n  accessToken = null,\n  onSuccess = () => {},\n  onFailure = () => {},\n  label = \"\",\n  headersOverride = null\n}) {\n  return {\n    type: API,\n    payload: {\n      url,\n      method,\n      data,\n      accessToken,\n      onSuccess,\n      onFailure,\n      label,\n      headersOverride\n    }\n  };\n}\n\n/* THUNKS */\n// export const deleteClassEvent = id => {\n//   return dispatch => {\n//     let x = 0\n//     dispatch({ type: DELETE_EVENT_START })\n\n//     const request = fetch(\"/event/delete\", {\n//       method: 'post',\n//       body: JSON.stringify({\"class_event_id\":id})\n//     })\n\n//     return request\n//       .then(\n//         response => dispatch(loadClasses()),\n//         error => dispatch(deleteEventFailure(error.message))\n//       )\n//   }\n// }\n\n// export function loadClasses() {\n//   return function (dispatch, getState) {\n//     dispatch({ type: LOAD_CLASSES_START })\n\n//     const request = fetch(\"/classes/all\")\n\n//     return request\n//       .then(resp => resp.json())\n//       .then(\n//         response => dispatch(loadClassesSuccess(response)),\n//         err => dispatch(loadClassesFailure(err))\n//       )\n//   }\n// }\n\n// export function loadEvents() {\n//   return function (dispatch) {\n//     dispatch({ type: LOAD_EVENTS_START })\n\n//     const request = fetch(\"/class/events/all\")\n\n//     return request\n//       .then(resp => resp.json())\n//       .then(\n//         response => dispatch(loadEventsSuccess(response)),\n//         err => dispatch(loadEventsFailure(err))\n//       )\n//   }\n// }\n\n// export function addNewClass(payload) {\n//   return function (dispatch) {\n//     dispatch({ type: ADD_CLASS_START })\n//     fetch(\"/admin/class/add\", {\n//       method: 'post',\n//       headers: {\n//         'Accept': 'application/json',\n//         'Content-Type': 'application/json'\n//       },\n//       body: JSON.stringify(payload)\n//     })\n//       .then(res => {\n//         dispatch(loadClasses())\n//         dispatch(addNewClassSuccess())\n//       })\n//       .catch(err => {\n//         dispatch(addNewClassFailure(err.message))\n//       })\n//   }\n// }\n\n// export function scheduleEvent(payload) {\n//   return function (dispatch) {\n//     dispatch({ type: SCHEDULE_EVENT_START })\n//     fetch(\"/admin/event/add\", {\n//       method: 'post',\n//       headers: {\n//         'Accept': 'application/json',\n//         'Content-Type': 'application/json'\n//       },\n//       body: JSON.stringify(payload)\n//     })\n//       .then(res => {\n//         dispatch(scheduleEventSuccess())\n//         dispatch(loadEvents())\n//       })\n//       .catch(err => {\n//         dispatch(scheduleEventFailure(err.message));\n//       })\n//   }\n// }\n\n\n/* PLAIN OBJECTS */\nexport function loadClassesSuccess(classes) {\n  return {\n    type: LOAD_CLASSES_SUCCESS,\n    payload: classes\n  };\n}\n\nexport function loadClassesFailure(error) {\n  return {\n    type: LOAD_CLASSES_FAILURE,\n    payload: error\n  };\n}\n\nexport function loadEventsSuccess(classEvents) {\n  return {\n    type: LOAD_EVENTS_SUCCESS,\n    payload: classEvents\n  };\n}\n\nexport function loadEventsFailure(error) {\n  return {\n    type: LOAD_EVENTS_FAILURE,\n    payload: error\n  }\n}\n\nexport function deleteEventFailure(error) {\n  return {\n    type: DELETE_EVENT_FAILURE,\n    error\n  }\n}\n\nexport function deleteEventSuccess() {\n  return {\n    type: DELETE_EVENT_SUCCESS\n  }\n}\n\nexport function addNewClassFailure(error) {\n  return {\n    type: ADD_CLASS_FAILURE,\n    error\n  }\n}\n\nexport function addNewClassSuccess() {\n  return {\n    type: ADD_CLASS_SUCCESS\n  }\n}\n\nexport function scheduleEventFailure(error) {\n  return {\n    type: SCHEDULE_EVENT_FAILURE,\n    error\n  }\n}\n\nexport function scheduleEventSuccess() {\n  return {\n    type: SCHEDULE_EVENT_SUCCESS\n  }\n}\n\n","import React, { useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport { addNewClass } from \"../actions/\"\n\nconst mapDispatchToProps = { addNewClass }\n\nconst ConnectedClassForm = props => {\n  const [title, setTitle] = useState(\"\")\n\n  const handleChange = event => setTitle(event.target.value)\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    props.addNewClass({ title });\n    setTitle(\"\")\n  }\n\n  return (\n    <div className=\"admin-form\">\n    <form onSubmit={handleSubmit}>\n      <div>\n        <label htmlFor=\"title\">Class Name</label>\n        <input \n          type=\"text\"\n          id=\"title\"\n          value={title}\n          onChange={handleChange}\n        />\n      </div>\n      <button type=\"submit\">SAVE</button>\n    </form>\n    </div>\n  )\n}\n\n\n// class ConnectedClassForm extends Component {\n//   constructor(props) {\n//     super(props);\n//     this.state = {\n//       title: \"\"\n//     };\n//     this.handleChange = this.handleChange.bind(this);\n//     this.handleSubmit = this.handleSubmit.bind(this);\n//   }\n//   handleChange(event) {\n//     this.setState({ [event.target.id]: event.target.value });\n//   }\n//   handleSubmit(event) {\n//     event.preventDefault();\n//     const { title } = this.state;\n//     this.props.addNewClass({ title });\n//     this.setState({ title: \"\" });\n//   }\n//   render() {\n//     const { title } = this.state;\n//     return (\n//       <div className=\"admin-form\">\n//       <form onSubmit={this.handleSubmit}>\n//         <div>\n//           <label htmlFor=\"title\">Class Name</label>\n//           <input \n//             type=\"text\"\n//             id=\"title\"\n//             value={title}\n//             onChange={this.handleChange}\n//           />\n//         </div>\n//         <button type=\"submit\">SAVE</button>\n//       </form>\n//       </div>\n//     );\n//   }\n// }\nconst ClassForm = connect(\n  null,\n  mapDispatchToProps\n)(ConnectedClassForm);\nexport default ClassForm","import React, { useEffect, useState } from \"react\"\nimport { connect } from \"react-redux\"\nimport { loadEvents, deleteClassEvent } from \"../actions/\"\nimport { library } from '@fortawesome/fontawesome-svg-core'\nimport { fab } from '@fortawesome/free-brands-svg-icons'\nimport { faTrash } from '@fortawesome/free-solid-svg-icons'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { confirmAlert } from 'react-confirm-alert'\nimport 'react-confirm-alert/src/react-confirm-alert.css'\nimport { nsend } from \"q\"\n\nlibrary.add(fab, faTrash)\n\nconst mapStateToProps = state => {\n    return {\n        classEvents: state.classEvents\n    }\n}\n\nconst mapDispatchToProps = {\n    deleteClassEvent,\n    loadEvents\n}\n\n\nconst ConnectedClassList = props => {\n    const [selectedEvent, setSelectedEvent] = useState(0)\n    \n    useEffect(() => {\n        props.loadEvents()\n    }, [])\n\n    const confirmDelete = event => {\n        event.preventDefault()\n        \n        let selectedId = event.target.dataset.id\n        let deleteRow = () => {\n            props.deleteClassEvent(selectedId)\n        }\n\n        confirmAlert({\n            title: 'Confirm',\n            message: 'Are you sure you want to delete this scheduled class?',\n            buttons: [{\n                label: 'Yes',\n                onClick: deleteRow\n            },{\n                label: 'Cancel',\n                onClick: () => { /* do nothing */ }\n            }],\n            closeOnClickOutside: true\n        })\n    }\n\n    return (\n        <ul>\n            {props.classEvents.map(el => (\n                <li>{el.title} @ {el.start} [ <a href=\"\" key={el.class_event_id} data-id={el.class_event_id} onClick={confirmDelete}>delete</a> ] </li>\n            ))}\n        </ul>\n    )\n}\n\nconst ClassList = connect(mapStateToProps, mapDispatchToProps)(ConnectedClassList)\n\nexport default ClassList","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport Datetime from \"react-datetime\"\nimport { scheduleEvent, loadClasses } from \"../actions/\"\nimport moment from \"moment\"\n\nconst mapStateToProps = state => {\n    return { classes: state.classes };\n}\n\nfunction mapDispatchToProps(dispatch) {\n    return {\n        scheduleEvent: cls => dispatch(scheduleEvent(cls)),\n        loadClasses: () => dispatch(loadClasses())\n    };\n}\n\nclass ConnectedForm extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            class_id: \"\",\n            event_date: \"\"\n        };\n        this.handleChange = this.handleChange.bind(this);\n        this.handleDatetimeChange = this.handleDatetimeChange.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n    }\n\n    componentDidMount() {\n        this.props.loadClasses()\n        this.setState({\n            class_id: '',\n            duration: '',\n            event_date: ''\n        })\n    }\n\n    handleChange(event) {\n        this.setState({ [event.target.id]: event.target.value });\n    }\n\n    handleDatetimeChange(moment) {\n        this.setState({ event_date: moment.toDate() })\n    }\n\n    handleSubmit(event) {\n        event.preventDefault()\n        const { class_id, duration, event_date } = this.state\n        const datetime = moment(event_date).format(\"YYYY-MM-DD HH:mm\")\n        this.props.scheduleEvent({ class_id, duration, datetime })\n        this.setState({ class_id: \"\", duration: \"\", event_date: \"\" })\n    }\n    render() {\n        return (\n            <div className=\"admin-form\">\n                <form onSubmit={this.handleSubmit}>\n                    <div>\n                        <label htmlFor=\"class_id\">Class</label>\n                        <select\n                            id=\"class_id\"\n                            value={this.state.class_id}\n                            onChange={this.handleChange}\n                        >\n                            <option>Select a class</option>\n                            {this.props.classes.map(cls => (\n                                <option value={cls.class_id}>{cls.name}</option>\n                            ))}\n                        </select>\n                    </div>\n                    <div>\n                        <label htmlFor=\"event_date\">Date and time</label>\n                        <Datetime\n                            id=\"event_date\"\n                            value={this.state.event_date}\n                            onChange={this.handleDatetimeChange}\n                        />\n                    </div>\n                    <div>\n                        <label htmlFor=\"class_id\">Duration</label>\n                        <select\n                            id=\"duration\"\n                            value={this.state.duration}\n                            onChange={this.handleChange}\n                        >\n                            <option>---</option>\n                            <option value=\"60\">60 minutes</option>\n                            <option value=\"90\">90 minutes</option>\n                            <option value=\"120\">120 minutes</option>\n                        </select>\n                    </div>\n                    <button type=\"submit\">SAVE</button>\n                </form>\n            </div>\n        );\n    }\n}\nconst Form = connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(ConnectedForm);\nexport default Form","import React from \"react\"\nimport { Route, Switch, NavLink } from 'react-router-dom'\nimport ClassForm from \"./components/ClassForm\"\nimport ClassList from \"./components/ClassList\"\nimport ScheduleForm from \"./components/ScheduleForm\"\n\nconst App = () => (\n  <>\n    <div class=\"nav\">\n    <ul>\n      <li><NavLink to=\"add-class\">Add a class</NavLink></li>\n      <li><NavLink to=\"schedule-class\">Schedule a class</NavLink></li>\n      <li><NavLink to=\"view-classes\">View classes</NavLink></li>\n    </ul>\n    </div>\n    \n    <Switch>\n      <Route path=\"/add-class\" component={ClassForm} />\n      <Route path=\"/schedule-class\" component={ScheduleForm} />\n      <Route path=\"/view-classes\" component={ClassList} />\n    </Switch>\n\n    <div style={{width:\"100%\",textAlign:\"center\"}}><hr/>[ <a href=\"/\">exit admin</a> ]</div>\n  </>\n)\n\nexport default App","import {\n  LOAD_CLASSES_SUCCESS,\n  LOAD_CLASSES_FAILURE,\n  LOAD_EVENTS_SUCCESS,\n  LOAD_EVENTS_FAILURE,\n  ADD_CLASS_FAILURE,\n  ADD_CLASS_SUCCESS,\n  SCHEDULE_EVENT_START,\n  SCHEDULE_EVENT_FAILURE,\n  SCHEDULE_EVENT_SUCCESS\n} from '../actionTypes/index'\n\nconst reducer = (state, action) => {\n  console.info(action.type,action)\n  switch (action.type) {\n    case LOAD_EVENTS_FAILURE:\n        return Object.assign({}, state, { classes: state.classEvents= [] })\n    case LOAD_EVENTS_SUCCESS:\n        return Object.assign({}, state, { classEvents: action.payload })\n    case LOAD_CLASSES_FAILURE:\n        return Object.assign({}, state, { classes: state.classes= [] })\n    case LOAD_CLASSES_SUCCESS:\n        return Object.assign({}, state, { classes: action.payload })\n    case ADD_CLASS_SUCCESS:\n    case ADD_CLASS_FAILURE:\n    case SCHEDULE_EVENT_FAILURE:\n    case SCHEDULE_EVENT_SUCCESS:\n    default:\n      return state\n  }\n}\n\nexport default reducer","import axios from \"axios\";\nimport { API } from \"../actionTypes\"\nimport { accessDenied, apiError, apiStart, apiEnd } from \"../actions/api\";\n\nconst apiMiddleware = ({ dispatch }) => next => action => {\n  next(action);\n\n  if (action.type !== API) return;\n\n  const {\n    url,\n    method,\n    data,\n    accessToken,\n    onSuccess,\n    onFailure,\n    label,\n    headers\n  } = action.payload;\n  const dataOrParams = [\"GET\", \"DELETE\"].includes(method) ? \"params\" : \"data\";\n\n  // axios default configs\n  axios.defaults.baseURL = process.env.REACT_APP_BASE_URL || \"\";\n  axios.defaults.headers.common[\"Content-Type\"] = \"application/json\";\n  axios.defaults.headers.common[\"Authorization\"] = `Bearer ${accessToken}`;\n\n  if (label) {\n    dispatch(apiStart(label));\n  }\n\n  axios\n    .request({\n      url,\n      method,\n      headers,\n      [dataOrParams]: data\n    })\n    .then(({ data }) => {\n      dispatch(onSuccess(data));\n    })\n    .catch(error => {\n      dispatch(apiError(error));\n      dispatch(onFailure(error));\n\n      if (error.response && error.response.status === 403) {\n        dispatch(accessDenied(window.location.pathname));\n      }\n    })\n    .finally(() => {\n      if (label) {\n        dispatch(apiEnd(label));\n      }\n    });\n};\n\nexport default apiMiddleware;\n","import { API_START, API_END, ACCESS_DENIED, API_ERROR } from \"../actionTypes\"\n\nexport const apiStart = label => ({\n  type: API_START,\n  payload: label\n});\n\nexport const apiEnd = label => ({\n  type: API_END,\n  payload: label\n});\n\nexport const accessDenied = url => ({\n  type: ACCESS_DENIED,\n  payload: {\n    url\n  }\n});\n\nexport const apiError = error => ({\n  type: API_ERROR,\n  error\n});\n","import { createStore, applyMiddleware } from \"redux\"\nimport rootReducer from '../reducers/index'\n// import ReduxThunk from 'redux-thunk'\n// import thunk from 'redux-thunk';\nimport apiMiddleware from \"../middleware/api\";\n\nconst initialState = {\n  classes: [],\n  classEvents: []\n}\n\n// Add the reducer to your store on the `routing` key\nconst store = createStore(rootReducer, initialState, applyMiddleware(apiMiddleware))\n\nexport default store","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { Provider } from 'react-redux'\nimport { BrowserRouter } from 'react-router-dom'\nimport store from './stores'\n\nReactDOM.render((\n    <Provider store={store}>\n        <BrowserRouter basename=\"/admin\">\n            <App />\n        </BrowserRouter>\n    </Provider>\n), document.getElementById('root'))\n"],"sourceRoot":""}